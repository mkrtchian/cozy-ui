@require '../tools/mixins'

// @TODO Check to deduplicate dangerColor and errorColor
$dangerColor=#F52D2D
$errorColor=#F52D2D
$errorBackground=#FFF2F2

$validColor=#35CE68
$warnColor=#FF962F

// @stylint off
/*------------------------------------*\
  Palette
  =====
\*------------------------------------*/
/*
    Settings

    Weight: -10

    Styleguide Settings
*/

/*
    Colors

    Colors used in the user interface.

    ℹ️ In general, you are advised to use [theme colors](#kssref-settings-theme) when
    building your components: this will ensure your components react correctly when
    changing the theme.

    Styleguide Settings.colors
*/
html
    /*
    Grey

    Stylus: white        -  #FFFFFF, CSS: var(--white)
    Stylus: paleGrey     -  #F5F6F7, CSS: var(--paleGrey)
    Stylus: silver       -  #D6D8Da, CSS: var(--silver)
    Stylus: coolGrey     -  #95999D, CSS: var(--coolGrey)
    Stylus: slateGrey    -  #5D6165, CSS: var(--slateGrey)
    Stylus: charcoalGrey -  #32363F, CSS: var(--charcoalGrey)
    Stylus: black        -  #000000, CSS: var(--black)


    Styleguide Settings.colors.grey
    */
    --white         #FFFFFF
    --paleGrey      #F5F6F7
    --silver        #D6D8Da
    --coolGrey      #95999D
    --slateGrey     #5D6165
    --charcoalGrey  #32363F
    --black         #000000
    --overlay       rgba(50, 54, 63, .5)

    /*
    Blue

    Stylus: zircon       -  #F5FAFF, CSS: var(--zircon)
    Stylus: dodgerBlue   -  #297EF2, CSS: var(--dodgerBlue)
    Stylus: scienceBlue  -  #0B61D6, CSS: var(--scienceBlue)

    Styleguide Settings.colors.blue
    */
    --zircon       #F5FAFF
    --dodgerBlue   #297EF2
    --scienceBlue  #0B61D6

    /*
    Green

    Stylus: weirdGreen   - #40DE8E, CSS: var(--weirdGreen)
    Stylus: emerald      - #35CE68, CSS: var(--emerald)
    Stylus: malachite    - #08b442, CSS: var(--malachite)

    Styleguide Settings.colors.green
    */
    --weirdGreen   #40DE8E
    --emerald      #35CE68
    --malachite    #08b442

    /*
    Orange

    Stylus: mango         - #FF962F, CSS: var(--mango)

    Styleguide Settings.colors.orange
    */
    --mango          #FF962F

    /*
    Red

    Stylus: chablis      - #FFF2F2, CSS: var(--chablis)
    Stylus: yourPink     - #FDCBCB, CSS: var(--yourPink)
    Stylus: fuchsia      - #FC4C83, CSS: var(--fuchsia)
    Stylus: pomegranate  - #F52D2D, CSS: var(--pomegranate)
    Stylus: monza        - #DD0505, CSS: var(--monza)

    Styleguide Settings.colors.red
    */
    --chablis      #FFF2F2
    --yourPink     #FDCBCB
    --fuchsia      #FC4C83
    --pomegranate  #F52D2D
    --monza        #DD0505

/*
    Theme

    Semantic colors suitable for theming. We encourage users of cozy-ui to use semantic colors
    instead of absolute colors to facilitate theming.

    We try to use a naming schema that is close to what is use in [Material-UI React's theming](https://material-ui.com/customization/palette/#palette-colors).
    It is possible that we have some discrepancies. If you see something that seems out
    of the ordinary and where you think we could reduce the difference with MUI, please
    do not hesitate to [open an issue](https://github.com/cozy/cozy-ui/issues/new).

    Styleguide Settings.theme
*/
html, .CozyTheme--normal
    /*
    Primary

    Stylus: primaryColor             - #297EF2, CSS: var(--primaryColor)
    Stylus: primaryColorDark         - #0B61D6, CSS: var(--primaryColorDark)
    Stylus: primaryColorLight        - #5C9DF5, CSS: var(--primaryColorLight)
    Stylus: primaryColorLighter      - #4B93F7, CSS: var(--primaryColorLighter)
    Stylus: primaryColorLightest     - #9FC4FB, CSS: var(--primaryColorLightest)
    Stylus: primaryContrastTextColor - #FFFFFF, CSS: var(--primaryContrastTextColor)

    Styleguide Settings.theme.primary
    */
    --primaryColor #297EF2
    --primaryColorDark #0B61D6
    --primaryColorLight #5C9DF5
    --primaryColorLighter #4B93F7 // should not be used
    --primaryColorLightest #9FC4FB

    /*
    Secondary

    Stylus: secondaryColor   - #fd7461, CSS: var(--secondaryColor)
    Stylus: secondaryColorDark   - #E3503B, CSS: var(--secondaryColorDark)
    Stylus: secondaryColorLight   - #ffdeda, CSS: var(--secondaryColorLight)
    Stylus: secondaryColorLighter   - #fd7461, CSS: var(--secondaryColorLighter)
    Stylus: secondaryColorLightest   - #FECDC6, CSS: var(--secondaryColorLightest)

    Styleguide Settings.theme.secondary
    */
    --secondaryColor #fd7461
    --secondaryColorDark #E3503B
    --secondaryColorLight #ffdeda // lighten(dodgerBlue, 24)
    --secondaryColorLighter #fd7461 //
    --secondaryColorLightest #FECDC6

    /*
    Background colors

    Stylus: primaryBackgroundLight -  #F5FAFF, CSS: var(--primaryBackgroundLight)
    Stylus: paperBackgroundColor -  #FFF, CSS: var(--paperBackgroundColor)
    Stylus: defaultBackgroundColor -  #F5F6F7, CSS: var(--defaultBackgroundColor)

    Styleguide Settings.theme.background
    */
    --primaryBackgroundLight: #F5FAFF
    --paperBackgroundColor: #FFF
    --defaultBackgroundColor: #F5F6F7 // paleGrey

    /*
    Text colors

    Stylus: primaryTextColor -  #32363F, CSS: var(--primaryTextColor)
    Stylus: secondaryTextColor - #95999D, CSS: var(--secondaryTextColor)
    Stylus: primaryContrastTextColor -  #FFF, CSS: var(--primaryContrastTextColor)
    Stylus: primaryContrastTextColor -  #FFF, CSS(--secondaryContrastTextColor)

    Styleguide Settings.theme.text
    */
    --primaryTextColor #32363F
    --secondaryTextColor #95999D
    --primaryContrastTextColor #FFF
    --secondaryContrastTextColor #FFF


    /*
    Components colors

    Stylus: dividerColor -  #D6D8Da, CSS: var(--dividerColor)

    Styleguide Settings.theme.components
    */
    --dividerColor: #D6D8Da

    /*
    Intention colors

    Stylus: validColor -  #35CE68, CSS: var(--validColor)
    Stylus: warnColor -  #FF962F, CSS: var(--warnColor)
    Stylus: dangerColor -  #F52D2D, CSS: var(--dangerColor)

    Styleguide Settings.theme.intention
    */
    --validColor: $validColor
    --warnColor: $warnColor
    --dangerColor: $dangerColor


    /*
    The CSS variables below are historic and we should strive not to
    use them. Prefer to use directly semantic colors above.
    */
    --spinnerColor var(--primaryColor)

    --linkColor var(--primaryColor)
    --linkTextDecoration none
    --linkColorActive var(--primaryColorDark)

    --invertedTabsActiveTextColor var(--primaryContrastTextColor)
    --invertedTabsInactiveTextColor var(--primaryContrastTextColor)
    --invertedTabsIndicatorColor var(--primaryContrastTextColor)
    --invertedTabsBackgroundColor var(--primaryColor)

    --regularButtonPrimaryColor: var(--primaryColor)
    --regularButtonSecondaryColor: var(--primaryColor)
    --regularButtonActiveColor: var(--primaryColorDark)
    --regularButtonConstrastColor: var(--primaryContrastTextColor)

    --secondaryButtonPrimaryColor: #FFF
    --secondaryButtonSecondaryColor: var(--silver)
    --secondaryButtonActiveColor: var(--silver)
    --secondaryButtonContrastColor: var(--black)

    --dividerColor2: var(--coolGrey)

    --iconColor: currentColor
    --textIconColor: var(--charcoalGrey)
    --actionMenuIconColor: var(--slateGrey)

    --errorColor: $errorColor
    --errorBackground: $errorBackground

    --neutralBackground: var(--paleGrey)

    --buttonTextTransform uppercase
    --buttonBorderRadius rem(2)

    --navTextColor var(--slateGrey)
    --navTextActiveColor var(--slateGrey)
    --navTextHoverColor var(--charcoalGrey)

    --alertErrorColor #fff
    --alertErrorBackgroundColor var(--errorColor)

    --alertSuccessColor #fff
    --alertSuccessBackgroundColor var(--validColor)

    --alertInfoColor #fff
    --alertInfoBackgroundColor var(--slateGrey)
// @stylint on
